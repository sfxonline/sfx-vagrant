---
- name: Add ondrej/php repository
  become: yes
  apt_repository:
    repo: 'ppa:ondrej/php'

- name: upgrade the distro
  apt: upgrade=dist
  become: yes

- name: Install Apache/PHP
  apt: pkg={{ item }} state=present
  become: yes
  with_items:
    - apache2
    - php5.6
    - php5.6-cli
    - php5.6-curl
    - php5.6-gd
    - php5.6-mysql
    - php5.6-sqlite3
    - php5.6-xml
    - php5.6-zip
    - php5.6-mbstring
    - php7.0
    - php7.0-cli
    - php7.0-curl
    - php7.0-gd
    - php7.0-mysql
    - php7.0-sqlite3
    - php7.0-xml
    - php7.0-zip
    - php7.0-mbstring
    - php-imagick
    - php-apcu
    - php-xdebug

- name: Set /var/lock/apache2 owner
  file: path=/var/lock/apache2 recurse=yes state=directory group={{ apache_group }} owner={{ apache_user }}
  become: yes

- name: Set Apache user and group
  lineinfile: >
    dest=/etc/apache2/envvars
    regexp="{{ item.key }}"
    line="{{ item.value }}"
    state=present
  with_items:
   - { key: "^export APACHE_RUN_USER=", value: "export APACHE_RUN_USER={{ apache_user }}" }
   - { key: "^export APACHE_RUN_GROUP=", value: "export APACHE_RUN_GROUP={{ apache_group }}" }
  notify:
   - apache-restart
  become: yes

- name: Make sure apache_root exists
  file:
    path={{ apache_root }}
    state=directory
    group={{ apache_group }}
    owner={{ apache_user }}
  become: yes

- name: Upload phpinfo.php
  template: src={{ item }} dest=/tmp/{{ item }} owner={{ apache_user }} group={{ apache_group }} mode=0644
  with_items:
    - phpinfo.php

- name: Move phpinfo.php
  shell: cp -f /tmp/phpinfo.php "{{ apache_root }}/phpinfo.php"; chown {{ apache_user }}:{{ apache_group }} "{{ apache_root }}/phpinfo.php"; rm -f /tmp/phpinfo.php;

- name: Apache | Enable modules
  command: a2enmod {{ item }} creates=/etc/apache2/mods-enabled/{{ item }}.load
  with_items:
    - rewrite
    - php{{ php_version }}
    - autoindex
    - ssl
  become: yes
  notify: apache-restart

- name: Delete default Apache vhost
  file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
  become: yes
  notify: apache-restart

- name: Push default virtualhost configuration template
  template:
    src=default_virtualhost.conf.j2
    dest=/etc/apache2/sites-available/default-vhost.conf
  notify: apache-restart
  become: yes

- name: Create ssl directory
  file: path=/etc/apache2/ssl state=directory group={{ apache_group }} owner={{ apache_user }}
  become: yes

- name: create self-signed SSL cert
  command: openssl req -new -nodes -x509 -subj "/C=US/ST=Oregon/L=Portland/O=IT/CN=${ansible_fqdn}" -days 3650 -keyout /etc/apache2/ssl/server.key -out /etc/apache2/ssl/server.crt -extensions v3_ca creates=/etc/apache2/ssl/server.crt

- name: Apache | Enable Sites
  command: a2ensite {{ item }} creates=/etc/apache2/sites-enabled/{{ item }}
  with_items:
    - default-vhost
  become: yes
  notify: apache-reload

- name: Configure PHP 5.6
  template: src={{ item.src }} dest=/etc/php/5.6/mods-available/{{ item.dest }} owner=root group=root mode=0644
  with_items:
#    - { src: opcache.ini, dest: opcache.ini }
    - { src: debug.ini, dest: debug.ini }
    - { src: xdebug.ini.j2, dest: xdebug.ini }
  become: yes

- name: Configure PHP 7.0
  template: src={{ item.src }} dest=/etc/php/7.0/mods-available/{{ item.dest }} owner=root group=root mode=0644
  with_items:
#    - { src: opcache.ini, dest: opcache.ini }
    - { src: debug.ini, dest: debug.ini }
    - { src: xdebug.ini.j2, dest: xdebug.ini }
  become: yes

- name: Activate custom php modules
  command: phpenmod debug xdebug
  become: yes

- name: disable PHP 5.6
  become: yes
  command: a2dismod php5.6

- name: disable PHP 7.0
  become: yes
  command: a2dismod php7.0

- name: enable PHP {{ php_version }}
  become: yes
  command: "a2enmod php{{ php_version }}"

- name: Setup Owner
  file: path={{ apache_root }} owner=vagrant group=users recurse=true
  become: yes
  notify: apache-restart

- name: be sure apache is started and enabled
  service: name=apache2 state=started enabled=yes
  become: yes
