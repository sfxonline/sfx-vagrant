---
- name: Create directory
  file: path={{ shopware4_install_path }} owner=vagrant group=users state=directory
  become: yes

- name: Download Shopware
  get_url: url={{ shopware4_download_url }} dest=/home/vagrant/shopware4.zip
- unarchive: src=/home/vagrant/shopware4.zip dest={{ shopware4_install_path }} copy=no creates={{ shopware4_install_path }}/shopware.php

- name: Download Shopware Demo Daten
  get_url: url={{ shopware4_demo_url }} dest=/home/vagrant/demo.zip

- shell: cd {{ shopware4_install_path }}; unzip -q /home/vagrant/demo.zip
  args:
    creates: "{{ shopware4_install_path }}/demo.sql"

- name: Create folder where emails get dumped to.
  file: path={{ shopware4_install_path }}/log/mails mode=777 owner={{ apache_user }} group={{ apache_user }} state=directory

#- name: Copy create cache script
#  template:
#    src: make_cache_dirs.j2
#    dest: /etc/init.d/make_cache_dirs
#    owner: root
#    group: root
#    mode: 0755
#  become: yes

#- name: Autostart cache script
#  service: name=make_cache_dirs enabled=yes
#  become: yes

#- name: Run cache script initially
#  command: /etc/init.d/make_cache_dirs
#  args:
#    creates: /dev/shm/cache/doctrine/attributes/
#  become: yes

#- name: Setup Owner for cache dir
#  file: path=/dev/shm/cache/ mode=777 owner={{ apache_user }} group={{ apache_user }} recurse=true
#  become: yes

#- name: Link cache folder to /dev/shm/cache
#  file: path={{ shopware_install_path }}/cache state=absent
#- file: dest={{ shopware_install_path }}/cache src=/dev/shm/cache/ mode=777 owner={{ apache_user }} group={{ apache_user }} state=link
#  become: yes

- name: Setup Permissions
  file: path={{ item }} recurse=true state=directory mode=777
  with_items:
    - "{{ shopware4_install_path }}/cache"
    - "{{ shopware4_install_path }}/logs"

- name: Make make Shopware CLI command executable
  file: path={{ shopware4_install_path }}/bin/console mode="ug+x" state=touch

- name: Create shopware db
  mysql_db: name={{ shopware4_db_name }} state=present
  become: yes

- name: Create shopware db user
  mysql_user: name={{ shopware4_db_user }} password={{ shopware4_db_pass }} priv={{ shopware4_db_name }}.*:ALL state=present
  become: yes

- name: Import Shopware database
  mysql_db: name={{ shopware4_db_name }} state=import target={{ shopware4_install_path }}/recovery/install/data/sql/sw4_clean.sql login_user={{ shopware4_db_user }} login_password={{ shopware4_db_pass }}

- name: Import Shopware snippets
  mysql_db: name={{ shopware4_db_name }} state=import target={{ shopware4_install_path }}/recovery/install/data/sql/snippets.sql login_user={{ shopware4_db_user }} login_password={{ shopware4_db_pass }}

- name: Import Shopware en
  mysql_db: name={{ shopware4_db_name }} state=import target={{ shopware4_install_path }}/recovery/install/data/sql/en.sql login_user={{ shopware4_db_user }} login_password={{ shopware4_db_pass }}

- name: Import Shopware demo data
  mysql_db: name={{ shopware4_db_name }} state=import target={{ shopware4_install_path }}/demo.sql login_user={{ shopware4_db_user }} login_password={{ shopware4_db_pass }}

- name: Create Shopware Admin user
  copy: src=setup_wizard_data.sql dest=/tmp
- mysql_db: name={{ shopware4_db_name }} state=import target=/tmp/setup_wizard_data.sql login_user={{ shopware4_db_user }} login_password={{ shopware4_db_pass }}

- name: Create install lock file
  shell: echo {{ ansible_date_time.year }}{{ ansible_date_time.month }}{{ ansible_date_time.day }}{{ ansible_date_time.hour }}{{ ansible_date_time.minute }} > {{ shopware4_install_path }}/recovery/install/data/install.lock

- name: Upload config.php
  template:
    src: config.php.j2
    dest: "/tmp/shopware_config.php"
    owner: vagrant
    group: vagrant
    mode: 0755

- name: Move config.php
  shell: cp -f /tmp/shopware_config.php "{{ shopware4_install_path }}/config.php"; chown vagrant:users "{{ shopware4_install_path }}/config.php"; rm -f /tmp/shopware_config.php;
